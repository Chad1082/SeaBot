//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeaBotCore.Localizaion {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SeaBotCore.Localizaion.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Barrel! Collecting {0} {1}.
        /// </summary>
        internal static string BARREL_COLLECTING_ITEM {
            get {
                return ResourceManager.GetString("BARREL_COLLECTING_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Barrel! Collecting {0} sailors!.
        /// </summary>
        internal static string BARREL_COLLECTING_SAILORS {
            get {
                return ResourceManager.GetString("BARREL_COLLECTING_SAILORS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сollecting {0} {1}.
        /// </summary>
        internal static string BUILDINGS_COLLECTING {
            get {
                return ResourceManager.GetString("BUILDINGS_COLLECTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Finishing upgrading {0}.
        /// </summary>
        internal static string BUILDINGS_FINISHED_UPG {
            get {
                return ResourceManager.GetString("BUILDINGS_FINISHED_UPG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Started upgrading {0}.
        /// </summary>
        internal static string BUILDINGS_STARTED_UPG {
            get {
                return ResourceManager.GetString("BUILDINGS_STARTED_UPG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t save a config file. Please move the bot in another directory or run with as administrator!.
        /// </summary>
        internal static string CONFIG_CANT_SAVE {
            get {
                return ResourceManager.GetString("CONFIG_CANT_SAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MAINTENANCE! Retrying after 30 mins.
        /// </summary>
        internal static string CORE_MAINTENANCE_30MIN {
            get {
                return ResourceManager.GetString("CORE_MAINTENANCE_30MIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No server_token.
        /// </summary>
        internal static string CORE_NO_SERV_TOKEN {
            get {
                return ResourceManager.GetString("CORE_NO_SERV_TOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restarting bot.
        /// </summary>
        internal static string CORE_RESTARTING {
            get {
                return ResourceManager.GetString("CORE_RESTARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stopped.
        /// </summary>
        internal static string CORE_STOPPED {
            get {
                return ResourceManager.GetString("CORE_STOPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is banned..
        /// </summary>
        internal static string CORE_USER_BANNED {
            get {
                return ResourceManager.GetString("CORE_USER_BANNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Started producing {0}.
        /// </summary>
        internal static string FACTORIES_STARTED_PROD {
            get {
                return ResourceManager.GetString("FACTORIES_STARTED_PROD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collecting {0} fish.
        /// </summary>
        internal static string FISH_COLLECTING {
            get {
                return ResourceManager.GetString("FISH_COLLECTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning, at least 1 SeaBot user got banned for using interval, which is lower than 12..
        /// </summary>
        internal static string FORM_BARREL_WARNING {
            get {
                return ResourceManager.GetString("FORM_BARREL_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  is created..
        /// </summary>
        internal static string LOGGER_CREATED {
            get {
                return ResourceManager.GetString("LOGGER_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sending Heartbeat....
        /// </summary>
        internal static string NETWORKING_HEARTBEAT {
            get {
                return ResourceManager.GetString("NETWORKING_HEARTBEAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [1/3] Getting another cookies.
        /// </summary>
        internal static string NETWORKING_LOGIN_1 {
            get {
                return ResourceManager.GetString("NETWORKING_LOGIN_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [2/3] Getting portal.
        /// </summary>
        internal static string NETWORKING_LOGIN_2 {
            get {
                return ResourceManager.GetString("NETWORKING_LOGIN_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [3/3] Getting sessionid.
        /// </summary>
        internal static string NETWORKING_LOGIN_3 {
            get {
                return ResourceManager.GetString("NETWORKING_LOGIN_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CANT LOGIN!.
        /// </summary>
        internal static string NETWORKING_LOGIN_CANT_LOGIN {
            get {
                return ResourceManager.GetString("NETWORKING_LOGIN_CANT_LOGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Faking real loading. Now, we&apos;ll load for {0:F1} seconds.
        /// </summary>
        internal static string NETWORKING_LOGIN_FAKE_LOAD {
            get {
                return ResourceManager.GetString("NETWORKING_LOGIN_FAKE_LOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0:F1} seconds elapsed.
        /// </summary>
        internal static string NETWORKING_LOGIN_FAKE_LOAD_ELAPSED {
            get {
                return ResourceManager.GetString("NETWORKING_LOGIN_FAKE_LOAD_ELAPSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Successfully logged in! Session ID = .
        /// </summary>
        internal static string NETWORKING_LOGIN_SUCCESS {
            get {
                return ResourceManager.GetString("NETWORKING_LOGIN_SUCCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server is responding with non xml file - Response = {0}; Exception info = {1}.
        /// </summary>
        internal static string NETWORKING_NO_RESPONSE {
            get {
                return ResourceManager.GetString("NETWORKING_NO_RESPONSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Someone is playing this game right now, waiting for {0} minutes.
        /// </summary>
        internal static string NETWORKING_SOMEONE_IS_PLAYING {
            get {
                return ResourceManager.GetString("NETWORKING_SOMEONE_IS_PLAYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [BAD] Server accepted our {0} requests!.
        /// </summary>
        internal static string NETWORKING_SYNC_ACCEPTED_BAD {
            get {
                return ResourceManager.GetString("NETWORKING_SYNC_ACCEPTED_BAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [GOOD] Server accepted our {0} requests.
        /// </summary>
        internal static string NETWORKING_SYNC_ACCEPTED_GOOD {
            get {
                return ResourceManager.GetString("NETWORKING_SYNC_ACCEPTED_GOOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking Fatal error....
        /// </summary>
        internal static string NETWORKING_SYNC_FATAL_CHECK {
            get {
                return ResourceManager.GetString("NETWORKING_SYNC_FATAL_CHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sync failed, no response.
        /// </summary>
        internal static string NETWORKING_SYNC_NO_RESPONSE {
            get {
                return ResourceManager.GetString("NETWORKING_SYNC_NO_RESPONSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server disconnected us with error {0}.
        /// </summary>
        internal static string NETWORKING_SYNC_SERVER_DISCONNECTED {
            get {
                return ResourceManager.GetString("NETWORKING_SYNC_SERVER_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Syncing....
        /// </summary>
        internal static string NETWORKING_SYNCING {
            get {
                return ResourceManager.GetString("NETWORKING_SYNCING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mwaaah, waking up after hibernation.
        /// </summary>
        internal static string NETWORKING_WAKING_UP {
            get {
                return ResourceManager.GetString("NETWORKING_WAKING_UP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading .
        /// </summary>
        internal static string SHIPS_LOADING {
            get {
                return ResourceManager.GetString("SHIPS_LOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sending .
        /// </summary>
        internal static string SHIPS_SENDING {
            get {
                return ResourceManager.GetString("SHIPS_SENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unloading .
        /// </summary>
        internal static string SHIPS_UNLOADING {
            get {
                return ResourceManager.GetString("SHIPS_UNLOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Started sleepin&apos;. Waking up after {0} min..
        /// </summary>
        internal static string SLEEP_STARTING {
            get {
                return ResourceManager.GetString("SLEEP_STARTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upgraded .
        /// </summary>
        internal static string UPGRADABLE_UPGRADED {
            get {
                return ResourceManager.GetString("UPGRADABLE_UPGRADED", resourceCulture);
            }
        }
    }
}
